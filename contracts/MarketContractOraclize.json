{
  "contractName": "MarketContractOraclize",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPriceQueryResult",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BASE_TOKEN",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_DECIMAL_PLACES",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isSettled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCollateralPoolContractLinked",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QUERY_CALLBACK_GAS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getQtyFilledOrCancelledFromOrder",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_DATA_SOURCE",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ORACLE_QUERY",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "CONTRACT_NAME",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BASE_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MKT_TOKEN_ADDRESS",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketCollateralPoolAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "orderAddresses",
          "type": "address[3]"
        },
        {
          "name": "unsignedOrderValues",
          "type": "uint256[5]"
        },
        {
          "name": "orderQty",
          "type": "int256"
        },
        {
          "name": "qtyToFill",
          "type": "int256"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "tradeOrder",
      "outputs": [
        {
          "name": "filledQty",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_CAP",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXPIRATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "setCollateralPoolContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_FLOOR",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QTY_MULTIPLIER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settlementPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "transferCreator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "orderAddresses",
          "type": "address[3]"
        },
        {
          "name": "unsignedOrderValues",
          "type": "uint256[5]"
        },
        {
          "name": "orderQty",
          "type": "int256"
        },
        {
          "name": "qtyToCancel",
          "type": "int256"
        }
      ],
      "name": "cancelOrder",
      "outputs": [
        {
          "name": "qtyCancelled",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "contractName",
          "type": "string"
        },
        {
          "name": "marketTokenAddress",
          "type": "address"
        },
        {
          "name": "baseTokenAddress",
          "type": "address"
        },
        {
          "name": "contractSpecs",
          "type": "uint256[5]"
        },
        {
          "name": "oracleDataSource",
          "type": "string"
        },
        {
          "name": "oracleQuery",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "UpdatedLastPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "settlePrice",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "UpdatedUserBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "UpdatedPoolBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "errorCode",
          "type": "uint8"
        },
        {
          "indexed": true,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "Error",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "filledQty",
          "type": "int256"
        },
        {
          "indexed": false,
          "name": "paidMakerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "paidTakerFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "feeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "cancelledQty",
          "type": "int256"
        },
        {
          "indexed": true,
          "name": "orderHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "currentCreator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "requestEarlySettlement",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "queryID",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60606040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302d05d3f14610164578063053f14da146101b95780630c8eb675146101e2578063210663e41461027057806327dc297e146102c55780632fed1b001461032f5780633270bb5b1461035857806338bbfa50146103855780633b3c4ae914610432578063411449bb1461045f5780634c258eb11461048857806356357d91146104c35780635ea7867a14610551578063614d08f8146105df5780636cee3abb1461066d5780636db7f77c146106c2578063798ddbc8146106cc57806390253ade14610721578063930a9d9214610776578063b5471dee146107ea578063bb4b573414610813578063c201293b1461083c578063c32b1dfa14610875578063ca361d671461089e578063f348e8b2146108c7578063fa3fa196146108f0578063fc51b9c514610929575b600080fd5b341561016f57600080fd5b610177610977565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101c457600080fd5b6101cc61099c565b6040518082815260200191505060405180910390f35b34156101ed57600080fd5b6101f56109a2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023557808201518184015260208101905061021a565b50505050905090810190601f1680156102625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561027b57600080fd5b610283610a40565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102d057600080fd5b61032d60048080356000191690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610a66565b005b341561033a57600080fd5b610342610a98565b6040518082815260200191505060405180910390f35b341561036357600080fd5b61036b610a9e565b604051808215151515815260200191505060405180910390f35b341561039057600080fd5b61043060048080356000191690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610ab1565b005b341561043d57600080fd5b610445610c23565b604051808215151515815260200191505060405180910390f35b341561046a57600080fd5b610472610c36565b6040518082815260200191505060405180910390f35b341561049357600080fd5b6104ad600480803560001916906020019091905050610c3d565b6040518082815260200191505060405180910390f35b34156104ce57600080fd5b6104d6610c5a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105165780820151818401526020810190506104fb565b50505050905090810190601f1680156105435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561055c57600080fd5b610564610cf8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105a4578082015181840152602081019050610589565b50505050905090810190601f1680156105d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156105ea57600080fd5b6105f2610d96565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610632578082015181840152602081019050610617565b50505050905090810190601f16801561065f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561067857600080fd5b610680610e34565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106ca610e5a565b005b34156106d757600080fd5b6106df611091565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561072c57600080fd5b6107346110b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561078157600080fd5b6107d4600480806060019091908060a001909190803590602001909190803590602001909190803560ff1690602001909190803560001916906020019091908035600019169060200190919050506110dd565b6040518082815260200191505060405180910390f35b34156107f557600080fd5b6107fd611a58565b6040518082815260200191505060405180910390f35b341561081e57600080fd5b610826611a5e565b6040518082815260200191505060405180910390f35b341561084757600080fd5b610873600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611a64565b005b341561088057600080fd5b610888611c99565b6040518082815260200191505060405180910390f35b34156108a957600080fd5b6108b1611c9f565b6040518082815260200191505060405180910390f35b34156108d257600080fd5b6108da611ca5565b6040518082815260200191505060405180910390f35b34156108fb57600080fd5b610927600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611cab565b005b341561093457600080fd5b610961600480806060019091908060a0019091908035906020019091908035906020019091905050611e00565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b60168054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a385780601f10610a0d57610100808354040283529160200191610a38565b820191906000526020600020905b815481529060010190602001808311610a1b57829003601f168201915b505050505081565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a9482826000604051805910610a7a5750595b9080825280601f01601f1916602001820160405250610ab1565b5050565b60085481565b600d60009054906101000a900460ff1681565b610ab9612084565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610af257600080fd5b60176000846000191660001916815260200190815260200160002060009054906101000a900460ff161515610b2657600080fd5b8160169080519060200190610b3c929190613bde565b50610b498260085461239e565b600b819055507f3e19f2256bddc30aeab8054ccbd86723452d07f687b94441de69c05ee212dafa826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610bb1578082015181840152602081019050610b96565b50505050905090810190601f168015610bde5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1610bf3612698565b60176000846000191660001916815260200190815260200160002060006101000a81549060ff0219169055505050565b600d60019054906101000a900460ff1681565b620249f081565b6000610c5382600f61273990919063ffffffff16565b9050919050565b60148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cf05780601f10610cc557610100808354040283529160200191610cf0565b820191906000526020600020905b815481529060010190602001808311610cd357829003601f168201915b505050505081565b60158054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d8e5780601f10610d6357610100808354040283529160200191610d8e565b820191906000526020600020905b815481529060010190602001808311610d7157829003601f168201915b505050505081565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e2c5780601f10610e0157610100808354040283529160200191610e2c565b820191906000526020600020905b815481529060010190602001808311610e0f57829003601f168201915b505050505081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610f0460148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ef65780601f10610ecb57610100808354040283529160200191610ef6565b820191906000526020600020905b815481529060010190602001808311610ed957829003601f168201915b5050505050620249f0612790565b9150813410151515610f1557600080fd5b61105760148054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fae5780601f10610f8357610100808354040283529160200191610fae565b820191906000526020600020905b815481529060010190602001808311610f9157829003601f168201915b505050505060158054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110495780601f1061101e57610100808354040283529160200191611049565b820191906000526020600020905b81548152906001019060200180831161102c57829003601f168201915b5050505050620249f0612b25565b9050600160176000836000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006110e7613c5e565b6000806000806000600d60019054906101000a900460ff1680156111185750600d60009054906101000a900460ff16155b151561112357600080fd5b60008c14158015611135575060008b14155b8015611150575061114f8b8d61307990919063ffffffff16565b5b151561115b57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfab472f30336000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b151561125457600080fd5b6102c65a03f1151561126557600080fd5b50505060405180519050151561127a57600080fd5b6112f18e600380602002604051908101604052809291908260036020028082843782019150505050508e600580602002604051908101604052809291908260056020028082843782019150505050508e3073ffffffffffffffffffffffffffffffffffffffff16613093909392919063ffffffff16565b9550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cfab472f3088600001516000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b15156113f057600080fd5b6102c65a03f1151561140157600080fd5b50505060405180519050151561141657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16148061148457503373ffffffffffffffffffffffffffffffffffffffff16866020015173ffffffffffffffffffffffffffffffffffffffff16145b151561148f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff16141580156115045750856020015173ffffffffffffffffffffffffffffffffffffffff16866000015173ffffffffffffffffffffffffffffffffffffffff1614155b151561150f57600080fd5b856000015173ffffffffffffffffffffffffffffffffffffffff1673__OrderLib______________________________638163681e90918861010001518d8d8d6000604051602001526040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600019166000191681526020018460ff1660ff168152602001836000191660001916815260200182600019166000191681526020019550505050505060206040518083038186803b151561160d57600080fd5b6102c65a03f4151561161e57600080fd5b50505060405180519050151561163357600080fd5b8560c001514210151561168c57856101000151600019166000600181111561165757fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009650611a47565b6116ac61169d876101000151610c3d565b8d61322590919063ffffffff16565b9450600085141561170257856101000151600019166001808111156116cd57fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a360009650611a47565b61170c858c61323c565b9650600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eeaba0838760000151338a8a60a001516040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b151561181657600080fd5b6102c65a03f1151561182757600080fd5b50505061184586610100015188600f6132659092919063ffffffff16565b6000935060009250600073ffffffffffffffffffffffffffffffffffffffff16866040015173ffffffffffffffffffffffffffffffffffffffff1614151561199a57611890876132bb565b915061189b876132bb565b905060008660600151111561191d576118c3828288606001516132d99092919063ffffffff16565b935061191c8660000151876040015186600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132f9909392919063ffffffff16565b5b60008660800151111561199957611943828288608001516132d99092919063ffffffff16565b925061199833876040015185600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166132f9909392919063ffffffff16565b5b5b856040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16876000015173ffffffffffffffffffffffffffffffffffffffff167f75cbdb818111666ee7e206d94dfeb2d679055e8bc6f34b6f5d30272edd4099908a88888c610100015160405180858152602001848152602001838152602001826000191660001916815260200194505050505060405180910390a48696505b505050505050979650505050505050565b60065481565b600a5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611abf57600080fd5b600d60019054906101000a900460ff16151515611adb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611b1757600080fd5b80600e60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff16600e60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bb55cd26000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515611bfd57600080fd5b6102c65a03f11515611c0e57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16141515611c3a57600080fd5b80600d60026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600d60016101000a81548160ff02191690831515021790555050565b60075481565b60095481565b600c5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d0657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611d4257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7f11fe0c7098e1a76afcc68f35abaa07ef156fa7d6dd2d39664812fe37348d1660405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611e0a613c5e565b6000808414158015611e2b5750611e2a858561307990919063ffffffff16565b5b1515611e3657600080fd5b600d60009054906101000a900460ff16151515611e5257600080fd5b611ec987600380602002604051908101604052809291908260036020028082843782019150505050508760058060200260405190810160405280929190826005602002808284378201915050505050873073ffffffffffffffffffffffffffffffffffffffff16613093909392919063ffffffff16565b91503373ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16141515611f0957600080fd5b8160c0015142101515611f62578161010001516000191660006001811115611f2d57fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a36000925061207a565b611f82611f73836101000151610c3d565b8661322590919063ffffffff16565b90506000811415611fd85781610100015160001916600180811115611fa357fe5b7fe6104340582083fe7674a149f8da127b9d3d7f74a88ccd7610562eb5b61b919360405160405180910390a36000925061207a565b611fe2848261323c565b9250611fff82610100015184600f6134019092919063ffffffff16565b81610100015160001916826040015173ffffffffffffffffffffffffffffffffffffffff16836000015173ffffffffffffffffffffffffffffffffffffffff167f7de4479e80e82e22edb1e0010433c8befc804c34988024fa0b0234715102cd8f866040518082815260200191505060405180910390a48292505b5050949350505050565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806120f6575060006120f4601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613457565b145b15612107576121056000613462565b505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561219557600080fd5b6102c65a03f115156121a657600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156122f057601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561229457600080fd5b6102c65a03f115156122a557600080fd5b50505060405180519050601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561237e57600080fd5b6102c65a03f1151561238f57600080fd5b50505060405180519050905090565b60006123a8613cf0565b60008060008693506000925060009150600090505b83518110156126795760307f01000000000000000000000000000000000000000000000000000000000000000284828151811015156123f857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015612510575060397f01000000000000000000000000000000000000000000000000000000000000000284828151811015156124a057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b156125c157811561253357600086141561252957612679565b8580600190039650505b600a830292506030848281518110151561254957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f01000000000000000000000000000000000000000000000000000000000000009004038301925061266c565b602e7f01000000000000000000000000000000000000000000000000000000000000000284828151811015156125f357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561266b57600191505b5b80806001019150506123bd565b600086111561268b5785600a0a830292505b8294505050505092915050565b600d60009054906101000a900460ff16156126b257612737565b600a544211156126dc576001600d60006101000a81548160ff021916908315150217905550612715565b600654600b541015806126f35750600754600b5411155b15612714576001600d60006101000a81548160ff0219169083151502179055505b5b600d60009054906101000a900460ff161561273657612735600b546138fa565b5b5b565b600061278883600101600084600019166000191681526020019081526020016000205484600001600085600019166000191681526020019081526020016000205461393b90919063ffffffff16565b905092915050565b600080601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061280257506000612800601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613457565b145b15612813576128116000613462565b505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156128a157600080fd5b6102c65a03f115156128b257600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156129fc57601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156129a057600080fd5b6102c65a03f115156129b157600080fd5b50505060405180519050601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc84846000604051602001526040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612ab6578082015181840152602081019050612a9b565b50505050905090810190601f168015612ae35780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1515612b0257600080fd5b6102c65a03f11515612b1357600080fd5b50505060405180519050905092915050565b6000806000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612b9957506000612b97601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613457565b145b15612baa57612ba86000613462565b505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515612c3857600080fd5b6102c65a03f11515612c4957600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612d9357601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515612d3757600080fd5b6102c65a03f11515612d4857600080fd5b50505060405180519050601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856000604051602001526040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612e4d578082015181840152602081019050612e32565b50505050905090810190601f168015612e7a5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1515612e9957600080fd5b6102c65a03f11515612eaa57600080fd5b505050604051805190509050823a02670de0b6b3a764000001811115612ed65760006001029150613071565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886000604051602001526040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612f9e578082015181840152602081019050612f83565b50505050905090810190601f168015612fcb5780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015613004578082015181840152602081019050612fe9565b50505050905090810190601f1680156130315780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b151561305257600080fd5b6125ee5a03f1151561306357600080fd5b505050506040518051905091505b509392505050565b60008183148061308b57506000828402135b905092915050565b61309b613c5e565b8360006003811015156130aa57fe5b6020020151816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360016003811015156130f557fe5b6020020151816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083600260038110151561314057fe5b6020020151816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082600060058110151561318b57fe5b60200201518160600181815250508260016005811015156131a857fe5b60200201518160800181815250508260026005811015156131c557fe5b60200201518160a00181815250508260036005811015156131e257fe5b60200201518160c0018181525050818160e0018181525050613206858585856139a3565b8161010001906000191690816000191681525050809050949350505050565b6000613234838360000361393b565b905092915050565b6000613247826132bb565b613250846132bb565b1061325b578161325d565b825b905092915050565b6132958184600001600085600019166000191681526020019081526020016000205461393b90919063ffffffff16565b836000016000846000191660001916815260200190815260200160002081905550505050565b6000808212156132d0578160000390506132d4565b8190505b919050565b6000816132e68585613b91565b8115156132ef57fe5b0490509392505050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15156133d857600080fd5b6102c65a03f115156133e957600080fd5b5050506040518051905015156133fb57fe5b50505050565b6134318184600101600085600019166000191681526020019081526020016000205461393b90919063ffffffff16565b836001016000846000191660001916815260200190815260200160002081905550505050565b6000813b9050919050565b600080613482731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed613457565b111561352457731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061351b6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613bc4565b600190506138f5565b600061354373c03a2615d5efaf5f49f60b7bb6583eaec212fdf1613457565b11156135e55773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506135dc6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613bc4565b600190506138f5565b600061360473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e613457565b11156136a65773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061369d6040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613bc4565b600190506138f5565b60006136c573146500cfd35b22e4a392fe0adc06de1a1368ed48613457565b11156137675773146500cfd35b22e4a392fe0adc06de1a1368ed48601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061375e6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613bc4565b600190506138f5565b6000613786736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475613457565b11156137ea57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506138f5565b60006138097320e12a1f859b3feae5fb2a0a32c18f5a65555bbf613457565b111561386d577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506138f5565b600061388c7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa613457565b11156138f0577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa601160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506138f5565b600090505b919050565b80600c819055507f68170b705528d3ff1d324cda28eb28cc3d11ce81207f157c05e11c18411a013c816040518082815260200191505060405180910390a150565b600080828401905061394d8484613079565b151561395b5780915061399c565b600084121515613981578360ff60019060020a021903831315151561397c57fe5b613998565b8360ff60019060020a0203831215151561399757fe5b5b8091505b5092915050565b6000848460006003811015156139b557fe5b60200201518560016003811015156139c957fe5b60200201518660026003811015156139dd57fe5b60200201518660006005811015156139f157fe5b6020020151876001600581101515613a0557fe5b6020020151886002600581101515613a1957fe5b6020020151896003600581101515613a2d57fe5b60200201518a6004600581101515613a4157fe5b60200201518a604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390209050949350505050565b60008082840290506000841480613bb25750828482811515613baf57fe5b04145b1515613bba57fe5b8091505092915050565b8060139080519060200190613bda929190613bde565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613c1f57805160ff1916838001178555613c4d565b82800160010185558215613c4d579182015b82811115613c4c578251825591602001919060010190613c31565b5b509050613c5a9190613d04565b5090565b61012060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b602060405190810160405280600081525090565b613d2691905b80821115613d22576000816000905550600101613d0a565b5090565b90565b6000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480613d9a57506000613d98601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613457565b145b15613dab57613da96000613462565b505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515613e3957600080fd5b6102c65a03f11515613e4a57600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515613f9457601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515613f3857600080fd5b6102c65a03f11515613f4957600080fd5b50505060405180519050601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b151561406857600080fd5b6102c65a03f1151561407957600080fd5b50505050565b60006141c6600a5460148054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561411d5780601f106140f25761010080835404028352916020019161411d565b820191906000526020600020905b81548152906001019060200180831161410057829003601f168201915b505050505060158054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156141b85780601f1061418d576101008083540402835291602001916141b8565b820191906000526020600020905b81548152906001019060200180831161419b57829003601f168201915b5050505050620249f06141ff565b9050600160176000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000806000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061427357506000614271601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613457565b145b15614284576142826000613462565b505b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561431257600080fd5b6102c65a03f1151561432357600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561446d57601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561441157600080fd5b6102c65a03f1151561442257600080fd5b50505060405180519050601260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856000604051602001526040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561452757808201518184015260208101905061450c565b50505050905090810190601f1680156145545780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b151561457357600080fd5b6102c65a03f1151561458457600080fd5b505050604051805190509050823a02670de0b6b3a7640000018111156145b0576000600102915061474a565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f82888888886000604051602001526040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561467757808201518184015260208101905061465c565b50505050905090810190601f1680156146a45780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156146dd5780820151818401526020810190506146c2565b50505050905090810190601f16801561470a5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b151561472b57600080fd5b6125ee5a03f1151561473c57600080fd5b505050506040518051905091505b509493505050505600a165627a7a72305820b1d191822c86021329d726d9da6cf6dbdef3661673608ae1e1abcefd3b48c6410029",
  "sourceMap": "875:5373:8:-;;;2258:5:3;2234:29;;;;;;;;;;;;;;;;;;;;2314:5;2269:50;;;;;;;;;;;;;;;;;;;;2486:1028:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2739:12;2761:18;2789:16;2815:13;1024:10:0;1014:7;;:20;;;;;;;;;;;;;;;;;;4244:18:3;4224:17;;:38;;;;;;;;;;;;;;;;;;4296:18;4272:9;;:43;;;;;;;;;;;;;;;;;;4333:9;;;;;;;;;;;:48;;;4382:10;4333:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4325:69;;;;;;;;4451:13;4465:1;4451:16;;;;;;;;;;;;;4437:11;:30;;;;4489:13;4503:1;4489:16;;;;;;;;;;;;;4477:9;:28;;;;4535:11;;4523:9;;:23;4515:32;;;;;;;;4581:13;4595:1;4581:16;;;;;;;;;;;;;4558:20;:39;;;;4624:13;4638:1;4624:16;;;;;;;;;;;;;4607:14;:33;;;;4663:13;4677:1;4663:16;;;;;;;;;;;;;4650:10;:29;;;;4710:3;4697:10;;:16;4689:25;;;;;;;;4741:12;4725:13;:28;;;;;;;;;;;;:::i;:::-;;4784:16;4763:18;;:37;;;;;;;;;;;;;;;;;;4829:16;4810:10;;:36;;;;;;;;;;;;;;;;;;4043:810;;;;2857:58:8;2009:4:11;2897:17:8;;1965:4:11;2875:19:8;;:39;2857:17;;;;;:58;;;:::i;:::-;3056:16;3035:18;:37;;;;;;;;;;;;:::i;:::-;;3097:11;3082:12;:26;;;;;;;;;;;;:::i;:::-;;3139:3;3126:10;;:16;3118:25;;;;;;;;1155:17;3375:3;3362:10;;:16;:42;;3354:51;;;;;;;;3415:13;:11;;;;;:13;;;:::i;:::-;2486:1028;;;;;;875:5373;;6549:114:11;2335:1;2329:3;;;;;;;;;;;2321:15;;;2320:49;;;;2367:1;2340:25;2360:3;;;;;;;;;;;2340:11;;;;;:25;;;:::i;:::-;:28;2320:49;2317:97;;;2379:35;2051:1;2379:19;;;;;:35;;;:::i;:::-;;2317:97;2449:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:37;;2436:8;;;;;;;;;;;2428:37;;;;2425:88;;;2496:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:8;;:38;;;;;;;;;;;;;;;;;;2425:88;6627:8;;;;;;;;;;;:21;;;6649:6;6627:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6549:114;:::o;5345:901:8:-;6044:15;6062:138;6090:10;;6114:18;6062:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6146:12;6062:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;6062:14;;;;;:138;;;:::i;:::-;6044:156;;6235:4;6210:13;:22;6224:7;6210:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5345:901;:::o;6926:146:11:-;6988:10;7050:5;7038:11;7029:27;;7019:47;;;:::o;2671:1764::-;2734:4;2809:1;2753:55;2765:42;2753:11;;;;;:55;;;:::i;:::-;:57;2749:245;;;2863:42;2835:3;;:71;;;;;;;;;;;;;;;;;;2920:38;;;;;;;;;;;;;;;;;;;:23;;;;;:38;;;:::i;:::-;2979:4;2972:11;;;;2749:245;3063:1;3007:55;3019:42;3007:11;;;;;:55;;;:::i;:::-;:57;3003:254;;;3125:42;3097:3;;:71;;;;;;;;;;;;;;;;;;3182:39;;;;;;;;;;;;;;;;;;;:23;;;;;:39;;;:::i;:::-;3242:4;3235:11;;;;3003:254;3326:1;3270:55;3282:42;3270:11;;;;;:55;;;:::i;:::-;:57;3266:249;;;3386:42;3358:3;;:71;;;;;;;;;;;;;;;;;;3443:36;;;;;;;;;;;;;;;;;;;:23;;;;;:36;;;:::i;:::-;3500:4;3493:11;;;;3266:249;3584:1;3528:55;3540:42;3528:11;;;;;:55;;;:::i;:::-;:57;3524:253;;;3646:42;3618:3;;:71;;;;;;;;;;;;;;;;;;3703:38;;;;;;;;;;;;;;;;;;;:23;;;;;:38;;;:::i;:::-;3762:4;3755:11;;;;3524:253;3846:1;3790:55;3802:42;3790:11;;;;;:55;;;:::i;:::-;:57;3786:201;;;3908:42;3880:3;;:71;;;;;;;;;;;;;;;;;;3972:4;3965:11;;;;3786:201;4056:1;4000:55;4012:42;4000:11;;;;;:55;;;:::i;:::-;:57;3996:200;;;4117:42;4089:3;;:71;;;;;;;;;;;;;;;;;;4181:4;4174:11;;;;3996:200;4265:1;4209:55;4221:42;4209:11;;;;;:55;;;:::i;:::-;:57;4205:202;;;4328:42;4300:3;;:71;;;;;;;;;;;;;;;;;;4392:4;4385:11;;;;4205:202;4423:5;4416:12;;2671:1764;;;;:::o;5685:380::-;5801:10;5822;2335:1;2329:3;;;;;;;;;;;2321:15;;;2320:49;;;;2367:1;2340:25;2360:3;;;;;;;;;;;2340:11;;;;;:25;;;:::i;:::-;:28;2320:49;2317:97;;;2379:35;2051:1;2379:19;;;;;:35;;;:::i;:::-;;2317:97;2449:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:37;;2436:8;;;;;;;;;;;2428:37;;;;2425:88;;;2496:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:8;;:38;;;;;;;;;;;;;;;;;;2425:88;5835:8;;;;;;;;;;;:17;;;5853:10;5865:8;5835:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5822:52:11;;5918:8;5906:11;:20;5896:7;:30;5888:5;:38;5884:52;;;5935:1;5928:8;;;;;;5884:52;5980:8;;;;;;;;;;;:27;;;6014:5;6021:9;6032:10;6044:3;6049:8;5980:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5973:85:11;;2524:1;5685:380;;;;;;;:::o;7740:118::-;7838:13;7814:21;:37;;;;;;;;;;;;:::i;:::-;;7740:118;:::o;875:5373:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "875:5373:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4441:104:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4752:478:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2269:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:48:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12178:168:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;992:32:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:26:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1728:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1761:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3904:568:8;;;;;;1662:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2344:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5377:2947;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1829:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2122:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10426:537;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1997:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2201:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1138:193:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8795:1339:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:22:0;;;;;;;;;;;;;:::o;2174:21:3:-;;;;:::o;1313:34:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1800:23:3:-;;;;;;;;;;;;;:::o;4441:104:11:-;4500:38;4511:4;4517:6;4535:1;4525:12;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:10;:38::i;:::-;4441:104;;:::o;1885:32:3:-;;;;:::o;2234:29::-;;;;;;;;;;;;;:::o;4752:478:8:-;4856:20;:18;:20::i;:::-;4842:34;;:10;:34;;;4834:43;;;;;;;;4895:13;:22;4909:7;4895:22;;;;;;;;;;;;;;;;;;;;;;;;;;;4887:31;;;;;;;;4990:6;4967:20;:29;;;;;;;;;;;;:::i;:::-;;5018:38;5027:6;5035:20;;5018:8;:38::i;:::-;5006:9;:50;;;;5066:24;5083:6;5066:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5100:17:8;:15;:17::i;:::-;5201:13;:22;5215:7;5201:22;;;;;;;;;;;;;;;;;;5194:29;;;;;;;;;;;4752:478;;;:::o;2269:50:3:-;;;;;;;;;;;;;:::o;1062:48:8:-;1104:6;1062:48;:::o;12178:168:3:-;12260:3;12282:57;12329:9;12282:13;:46;;:57;;;;:::i;:::-;12275:64;;12178:168;;;:::o;992:32:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1030:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1728:27:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1761:33::-;;;;;;;;;;;;;:::o;3904:568:8:-;3965:9;4294:15;3977:57;3995:18;3977:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;3977:17;:57::i;:::-;3965:69;;4065:4;4052:9;:17;;4044:26;;;;;;;;4312:114;4340:18;4312:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4372:12;4312:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;4312:14;:114::i;:::-;4294:132;;4461:4;4436:13;:22;4450:7;4436:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3904:568;;:::o;1662:32:3:-;;;;;;;;;;;;;:::o;2344:42::-;;;;;;;;;;;;;:::o;5377:2947::-;5593:13;5903:27;;:::i;:::-;6635:16;7188:17;7219;7356;7405:16;5630:30;;;;;;;;;;;:44;;;;;5665:9;;;;;;;;;;;5664:10;5630:44;5622:53;;;;;;;;5735:1;5723:8;:13;;:31;;;;;5753:1;5740:9;:14;;5723:31;:65;;;;;5758:30;5778:9;5758:8;:19;;:30;;;;:::i;:::-;5723:65;5715:74;;;;;;;;5840:9;;;;;;;;;;;:34;;;5875:4;5881:10;5840:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5832:61;;;;;;;;5933:72;5959:14;5933:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5975:19;5933:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5996:8;5941:4;5933:25;;;;:72;;;;;;:::i;:::-;5903:102;;6023:9;;;;;;;;;;;:34;;;6058:4;6064:5;:11;;;6023:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6015:62;;;;;;;;6179:1;6156:25;;:5;:11;;;:25;;;:54;;;;6200:10;6185:25;;:5;:11;;;:25;;;6156:54;6148:63;;;;;;;;6287:1;6264:25;;:5;:11;;;:25;;;;:55;;;;;6308:5;:11;;;6293:26;;:5;:11;;;:26;;;;6264:55;6256:64;;;;;;;;6351:5;:11;;;:28;;;;;;6397:5;:15;;;6430:1;6449;6468;6351:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6330:150;;;;;;;;6503:5;:25;;;6496:3;:32;;6492:133;;;6576:5;:15;;;6544:48;;;6550:24;6544:48;;;;;;;;;;;;;;;;;;6613:1;6606:8;;;;6492:133;6654:68;6672:49;6705:5;:15;;;6672:32;:49::i;:::-;6654:8;:17;;:68;;;;:::i;:::-;6635:87;;6752:1;6736:12;:17;6732:160;;;6843:5;:15;;;6814:45;;;6820:21;6814:45;;;;;;;;;;;;;;;;;;6880:1;6873:8;;;;6732:160;6914:39;6929:12;6943:9;6914:14;:39::i;:::-;6902:51;;6963:20;;;;;;;;;;;:36;;;7013:5;:11;;;7038:10;7062:9;7085:5;:11;;;6963:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7116:61;7150:5;:15;;;7167:9;7116:13;:33;;:61;;;;;:::i;:::-;7208:1;7188:21;;7239:1;7219:21;;7285:1;7255:32;;:5;:18;;;:32;;;;7251:823;;;7376:15;:9;:13;:15::i;:::-;7356:35;;7424:15;:9;:13;:15::i;:::-;7405:34;;7474:1;7457:5;:14;;;:18;7453:299;;;7510:58;7542:12;7556:11;7510:5;:14;;;:31;;:58;;;;;:::i;:::-;7495:73;;7586:151;7634:5;:11;;;7667:5;:18;;;7707:12;7586:9;;;;;;;;;;;:26;;;;:151;;;;;;:::i;:::-;7453:299;7787:1;7770:5;:14;;;:18;7766:298;;;7823:58;7855:12;7869:11;7823:5;:14;;;:31;;:58;;;;;:::i;:::-;7808:73;;7899:150;7947:10;7979:5;:18;;;8019:12;7899:9;;;;;;;;;;;:26;;;;:150;;;;;;:::i;:::-;7766:298;7251:823;8158:5;:18;;;8084:206;;8134:10;8084:206;;8109:5;:11;;;8084:206;;;8190:9;8213:12;8239;8265:5;:15;;;8084:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8308:9;8301:16;;5377:2947;;;;;;;;;;;;;;;;:::o;1829:21::-;;;;:::o;2122:22::-;;;;:::o;10426:537::-;1392:7:0;;;;;;;;;;;1378:21;;:10;:21;;;1370:30;;;;;;;;10529::3;;;;;;;;;;;10528:31;10520:40;;;;;;;;10640:1;10617:25;;:11;:25;;;;10609:34;;;;;;;;10741:11;10697:20;;:56;;;;;;;;;;;;;;;;;;10819:4;10771:53;;:20;;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:53;;;10763:62;;;;;;;;10898:11;10868:27;;:41;;;;;;;;;;;;;;;;;;10952:4;10919:30;;:37;;;;;;;;;;;;;;;;;;10426:537;:::o;1856:23::-;;;;:::o;1997:26::-;;;;:::o;2201:27::-;;;;:::o;1138:193:0:-;1392:7;;;;;;;;;;;1378:21;;:10;:21;;;1370:30;;;;;;;;1242:1;1220:24;;:10;:24;;;;1212:33;;;;;;;;1283:10;1255:39;;1274:7;;;;;;;;;;;1255:39;;;;;;;;;;;;1314:10;1304:7;;:20;;;;;;;;;;;;;;;;;;1138:193;:::o;8795:1339:3:-;8959:16;9136:27;;:::i;:::-;9506:16;9014:1;8999:11;:16;;:52;;;;;9019:32;9042:8;9019:11;:22;;:32;;;;:::i;:::-;8999:52;8991:61;;;;;;;;9116:9;;;;;;;;;;;9115:10;9107:19;;;;;;;;9166:72;9192:14;9166:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9208:19;9166:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9229:8;9174:4;9166:25;;;;:72;;;;;;:::i;:::-;9136:102;;9271:10;9256:25;;:5;:11;;;:25;;;9248:34;;;;;;;;9374:5;:25;;;9367:3;:32;;9363:133;;;9447:5;:15;;;9415:48;;;9421:24;9415:48;;;;;;;;;;;;;;;;;;9484:1;9477:8;;;;9363:133;9525:68;9543:49;9576:5;:15;;;9543:32;:49::i;:::-;9525:8;:17;;:68;;;;:::i;:::-;9506:87;;9623:1;9607:12;:17;9603:168;;;9722:5;:15;;;9693:45;;;9699:21;9693:45;;;;;;;;;;;;;;;;;;9759:1;9752:8;;;;9603:168;9796:41;9811:11;9824:12;9796:14;:41::i;:::-;9781:56;;9884:67;9921:5;:15;;;9938:12;9884:13;:36;;:67;;;;;:::i;:::-;10072:5;:15;;;9961:136;;;10014:5;:18;;;9961:136;;9989:5;:11;;;9961:136;;;10046:12;9961:136;;;;;;;;;;;;;;;;;;10115:12;10108:19;;8795:1339;;;;;;;;;:::o;6432:112:11:-;6492:7;2335:1;2329:3;;;;;;;;;;;2321:15;;;2320:49;;;;2367:1;2340:25;2360:3;;;;;;;;;;;2340:11;:25::i;:::-;:28;2320:49;2317:97;;;2379:35;2051:1;2379:19;:35::i;:::-;;2317:97;2449:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:37;;2436:8;;;;;;;;;;;2428:37;;;;2425:88;;;2496:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:8;;:38;;;;;;;;;;;;;;;;;;2425:88;6517:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6510:27;;6432:112;:::o;7111:589::-;7167:4;7183:20;;:::i;:::-;7225:9;7248:13;7284:6;7212:2;7183:32;;7237:1;7225:13;;7264:5;7248:21;;7291:1;7284:8;;7279:358;7296:7;:14;7294:1;:16;7279:358;;;7349:2;7335:16;;:7;7343:1;7335:10;;;;;;;;;;;;;;;;;;;;:16;;;;;7334:38;;;;;7369:2;7355:16;;:7;7363:1;7355:10;;;;;;;;;;;;;;;;;;;;:16;;;;;7334:38;7330:296;;;7395:8;7391:103;;;7436:1;7430:2;:7;7426:49;;;7439:5;;7426:49;7471:4;;;;;;;;7391:103;7519:2;7511:10;;;;7566:2;7552:7;7560:1;7552:10;;;;;;;;;;;;;;;;;;;;7547:16;;;:21;7539:29;;;;7330:296;;;7607:2;7593:16;;:7;7601:1;7593:10;;;;;;;;;;;;;;;;;;;;:16;;;;7589:37;;;7622:4;7611:15;;7589:37;7330:296;7312:3;;;;;;;7279:358;;;7655:1;7650:2;:6;7646:26;;;7670:2;7666;:6;7658:14;;;;7646:26;7689:4;7682:11;;7111:589;;;;;;;;:::o;12563:529:3:-;12613:9;;;;;;;;;;;12609:56;;;12658:7;;12609:56;12685:10;;12679:3;:16;12675:336;;;12804:4;12792:9;;:16;;;;;;;;;;;;;;;;;;12675:336;;;12883:9;;12870;;:22;;:50;;;;12909:11;;12896:9;;:24;;12870:50;12866:145;;;12948:4;12936:9;;:16;;;;;;;;;;;;;;;;;;12866:145;12675:336;13025:9;;;;;;;;;;;13021:65;;;13050:25;13065:9;;13050:14;:25::i;:::-;13021:65;12563:529;:::o;1449:236:7:-;1583:3;1609:69;1644:4;:22;;:33;1667:9;1644:33;;;;;;;;;;;;;;;;;;1609:4;:19;;:30;1629:9;1609:30;;;;;;;;;;;;;;;;;;:34;;:69;;;;:::i;:::-;1602:76;;1449:236;;;;:::o;4874:159:11:-;4965:4;2335:1;2329:3;;;;;;;;;;;2321:15;;;2320:49;;;;2367:1;2340:25;2360:3;;;;;;;;;;;2340:11;:25::i;:::-;:28;2320:49;2317:97;;;2379:35;2051:1;2379:19;:35::i;:::-;;2317:97;2449:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:37;;2436:8;;;;;;;;;;;2428:37;;;;2425:88;;;2496:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:8;;:38;;;;;;;;;;;;;;;;;;2425:88;4987:8;;;;;;;;;;;:17;;;5005:10;5017:8;4987:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:46:11;;4874:159;;;;:::o;6070:356::-;6170:10;6191;2335:1;2329:3;;;;;;;;;;;2321:15;;;2320:49;;;;2367:1;2340:25;2360:3;;;;;;;;;;;2340:11;:25::i;:::-;:28;2320:49;2317:97;;;2379:35;2051:1;2379:19;:35::i;:::-;;2317:97;2449:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:37;;2436:8;;;;;;;;;;;2428:37;;;;2425:88;;;2496:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:8;;:38;;;;;;;;;;;;;;;;;;2425:88;6204:8;;;;;;;;;;;:17;;;6222:10;6234:8;6204:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6191:52:11;;6287:8;6275:11;:20;6265:7;:30;6257:5;:38;6253:52;;;6304:1;6297:8;;;;;;6253:52;6349:8;;;;;;;;;;;:27;;;6383:5;6390:1;6393:10;6405:3;6410:8;6349:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6342:77:11;;2524:1;6070:356;;;;;;:::o;2916:109:6:-;2973:4;3003:1;2998;:6;:19;;;;3016:1;3012;3008;:5;:9;2998:19;2989:29;;2916:109;;;;:::o;3742:752:7:-;3919:11;;:::i;:::-;3960:14;3975:1;3960:17;;;;;;;;;;;;;3946:5;:11;;:31;;;;;;;;;;;4001:14;4016:1;4001:17;;;;;;;;;;;;;3987:5;:11;;:31;;;;;;;;;;;4049:14;4064:1;4049:17;;;;;;;;;;;;;4028:5;:18;;:38;;;;;;;;;;;4093:19;4113:1;4093:22;;;;;;;;;;;;;4076:5;:14;;:39;;;;;4142:19;4162:1;4142:22;;;;;;;;;;;;;4125:5;:14;;:39;;;;;4188:19;4208:1;4188:22;;;;;;;;;;;;;4174:5;:11;;:36;;;;;4248:19;4268:1;4248:22;;;;;;;;;;;;;4220:5;:25;;:50;;;;;4292:8;4280:5;:9;;:20;;;;;4328:137;4357:15;4386:14;4414:19;4447:8;4328:15;:137::i;:::-;4310:5;:15;;:155;;;;;;;;;;;;;4482:5;4475:12;;3742:752;;;;;;:::o;2354:122:6:-;2415:6;2440:10;2444:1;2448;2447:2;;2440:3;:10::i;:::-;2433:17;;2354:122;;;;:::o;3537:115::-;3596:6;3630;3634:1;3630:3;:6::i;:::-;3621;3625:1;3621:3;:6::i;:::-;:15;:24;;3644:1;3621:24;;;3640:1;3621:24;3614:31;;3537:115;;;;:::o;4700:195:7:-;4843:45;4878:9;4843:4;:19;;:30;4863:9;4843:30;;;;;;;;;;;;;;;;;;:34;;:45;;;;:::i;:::-;4810:4;:19;;:30;4830:9;4810:30;;;;;;;;;;;;;;;;;:78;;;;4700:195;;;:::o;3139:167:6:-;3185:7;3212:1;3208;:5;3204:96;;;3242:1;3241:2;;3229:15;;;;3204:96;3287:1;3275:14;;3139:167;;;;:::o;1037:203::-;1167:7;1222:11;1197:22;1206:1;1209:9;1197:8;:22::i;:::-;:36;;;;;;;;1190:43;;1037:203;;;;;:::o;491:143:19:-;593:5;:18;;;612:4;618:2;622:5;593:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:43;;;;;;491:143;;;;:::o;5089:210:7:-;5241:51;5279:12;5241:4;:22;;:33;5264:9;5241:33;;;;;;;;;;;;;;;;;;:37;;:51;;;;:::i;:::-;5205:4;:22;;:33;5228:9;5205:33;;;;;;;;;;;;;;;;;:87;;;;5089:210;;;:::o;6926:146:11:-;6988:10;7050:5;7038:11;7029:27;;7019:47;;;:::o;2671:1764::-;2734:4;2809:1;2753:55;2765:42;2753:11;:55::i;:::-;:57;2749:245;;;2863:42;2835:3;;:71;;;;;;;;;;;;;;;;;;2920:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;2979:4;2972:11;;;;2749:245;3063:1;3007:55;3019:42;3007:11;:55::i;:::-;:57;3003:254;;;3125:42;3097:3;;:71;;;;;;;;;;;;;;;;;;3182:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;3242:4;3235:11;;;;3003:254;3326:1;3270:55;3282:42;3270:11;:55::i;:::-;:57;3266:249;;;3386:42;3358:3;;:71;;;;;;;;;;;;;;;;;;3443:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;3500:4;3493:11;;;;3266:249;3584:1;3528:55;3540:42;3528:11;:55::i;:::-;:57;3524:253;;;3646:42;3618:3;;:71;;;;;;;;;;;;;;;;;;3703:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;3762:4;3755:11;;;;3524:253;3846:1;3790:55;3802:42;3790:11;:55::i;:::-;:57;3786:201;;;3908:42;3880:3;;:71;;;;;;;;;;;;;;;;;;3972:4;3965:11;;;;3786:201;4056:1;4000:55;4012:42;4000:11;:55::i;:::-;:57;3996:200;;;4117:42;4089:3;;:71;;;;;;;;;;;;;;;;;;4181:4;4174:11;;;;3996:200;4265:1;4209:55;4221:42;4209:11;:55::i;:::-;:57;4205:202;;;4328:42;4300:3;;:71;;;;;;;;;;;;;;;;;;4392:4;4385:11;;;;4205:202;4423:5;4416:12;;2671:1764;;;;:::o;13247:161:3:-;13334:20;13316:15;:38;;;;13364:37;13380:20;13364:37;;;;;;;;;;;;;;;;;;13247:161;:::o;1673:509:6:-;1729:6;1747:8;1762:1;1758;:5;1747:16;;1778;1789:1;1792;1778:10;:16::i;:::-;1777:17;1773:126;;;1887:1;1880:8;;;;1773:126;1918:1;1913;:6;;1909:249;;;2022:1;856:3;850:1;842:17;;;;839:22;2009:14;2004:1;:19;;1997:27;;;;;;1909:249;;;2145:1;792:3;786:1;778:17;;;;2132:14;2127:1;:19;;2120:27;;;;;;1909:249;2174:1;2167:8;;1673:509;;;;;;:::o;2115:559:7:-;2294:7;2347:15;2376:14;2391:1;2376:17;;;;;;;;;;;;;2407:14;2422:1;2407:17;;;;;;;;;;;;;2438:14;2453:1;2438:17;;;;;;;;;;;;;2469:19;2489:1;2469:22;;;;;;;;;;;;;2505:19;2525:1;2505:22;;;;;;;;;;;;;2541:19;2561:1;2541:22;;;;;;;;;;;;;2577:19;2597:1;2577:22;;;;;;;;;;;;;2613:19;2633:1;2613:22;;;;;;;;;;;;;2649:8;2324:343;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:350;;2115:559;;;;;;:::o;869:162:6:-;932:7;951:9;967:1;963;:5;951:17;;990:1;985;:6;:20;;;;1004:1;999;995;:5;;;;;;;;:10;985:20;978:28;;;;;;1023:1;1016:8;;869:162;;;;;:::o;7740:118:11:-;7838:13;7814:21;:37;;;;;;;;;;;;:::i;:::-;;7740:118;:::o;875:5373:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6549:114:11:-;2335:1;2329:3;;;;;;;;;;;2321:15;;;2320:49;;;;2367:1;2340:25;2360:3;;;;;;;;;;;2340:11;:25::i;:::-;:28;2320:49;2317:97;;;2379:35;2051:1;2379:19;:35::i;:::-;;2317:97;2449:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:37;;2436:8;;;;;;;;;;;2428:37;;;;2425:88;;;2496:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:8;;:38;;;;;;;;;;;;;;;;;;2425:88;6627:8;;;;;;;;;;;:21;;;6649:6;6627:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6549:114;:::o;5345:901:8:-;6044:15;6062:138;6090:10;;6114:18;6062:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6146:12;6062:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:6;6062:14;:138::i;:::-;6044:156;;6235:4;6210:13;:22;6224:7;6210:22;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;5345:901;:::o;5685:380:11:-;5801:10;5822;2335:1;2329:3;;;;;;;;;;;2321:15;;;2320:49;;;;2367:1;2340:25;2360:3;;;;;;;;;;;2340:11;:25::i;:::-;:28;2320:49;2317:97;;;2379:35;2051:1;2379:19;:35::i;:::-;;2317:97;2449:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2428:37;;2436:8;;;;;;;;;;;2428:37;;;;2425:88;;;2496:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:8;;:38;;;;;;;;;;;;;;;;;;2425:88;5835:8;;;;;;;;;;;:17;;;5853:10;5865:8;5835:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5822:52:11;;5918:8;5906:11;:20;5896:7;:30;5888:5;:38;5884:52;;;5935:1;5928:8;;;;;;5884:52;5980:8;;;;;;;;;;;:27;;;6014:5;6021:9;6032:10;6044:3;6049:8;5980:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5973:85:11;;2524:1;5685:380;;;;;;;:::o",
  "source": "/*\n    Copyright 2017-2018 Phillip A. Elsasser\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\npragma solidity ^0.4.18;\n\nimport \"./oraclizeAPI.sol\";\nimport \"../libraries/MathLib.sol\";\nimport \"../MarketContract.sol\";\n\n\n/// @title MarketContract first example of a MarketProtocol contract using Oraclize services\n/// @author Phil Elsasser <phil@marketprotocol.io>\ncontract MarketContractOraclize is MarketContract, usingOraclize {\n    using MathLib for uint;\n\n    // constants\n    string public ORACLE_DATA_SOURCE;\n    string public ORACLE_QUERY;\n    uint constant public QUERY_CALLBACK_GAS = 150000;\n    uint constant SECONDS_PER_SIXTY_DAYS = 60 * 60 * 24 * 60;\n    //uint constant public QUERY_CALLBACK_GAS_PRICE = 20000000000 wei; // 20 gwei - need to make this dynamic!\n\n    // state variables\n    string public lastPriceQueryResult;\n    mapping(bytes32 => bool) validQueryIDs;\n\n    /// @param contractName viewable name of this contract (BTC/ETH, LTC/ETH, etc)\n    /// @param marketTokenAddress address of our member token\n    /// @param baseTokenAddress address of the ERC20 token that will be used for collateral and pricing\n    /// @param contractSpecs array of unsigned integers including:\n    /// floorPrice minimum tradeable price of this contract, contract enters settlement if breached\n    /// capPrice maximum tradeable price of this contract, contract enters settlement if breached\n    /// priceDecimalPlaces number of decimal places to convert our queried price from a floating point to\n    /// an integer\n    /// qtyMultiplier multiply traded qty by this value from base units of collateral token.\n    /// expirationTimeStamp - seconds from epoch that this contract expires and enters settlement\n    /// @param oracleDataSource a data-source such as \"URL\", \"WolframAlpha\", \"IPFS\"\n    /// see http://docs.oraclize.it/#ethereum-quick-start-simple-query\n    /// @param oracleQuery see http://docs.oraclize.it/#ethereum-quick-start-simple-query for examples\n    function MarketContractOraclize(\n        string contractName,\n        address marketTokenAddress,\n        address baseTokenAddress,\n        uint[5] contractSpecs,\n        string oracleDataSource,\n        string oracleQuery\n    ) MarketContract(\n        contractName,\n        marketTokenAddress,\n        baseTokenAddress,\n        contractSpecs\n    )  public\n    {\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n        //oraclize_setCustomGasPrice(QUERY_CALLBACK_GAS_PRICE);  //TODO: allow this to be changed by creator.\n        ORACLE_DATA_SOURCE = oracleDataSource;\n        ORACLE_QUERY = oracleQuery;\n        require(EXPIRATION > now);         // Require expiration time in the future.\n\n        // Future timestamp must be within 60 days from now.\n        // https://docs.oraclize.it/#ethereum-quick-start-schedule-a-query-in-the-future\n        require(EXPIRATION - now <= SECONDS_PER_SIXTY_DAYS);\n        queryOracle();                      // Schedule a call to oracle at contract expiration time.\n    }\n\n    /// @notice allows a user to request an extra query to oracle in order to push the contract into\n    /// settlement.  A user may call this as many times as they like, since they are the ones paying for\n    /// the call to our oracle and post processing. This is useful for both a failsafe and as a way to\n    /// settle a contract early if a price cap or floor has been breached.\n    function requestEarlySettlement() external payable {\n        uint cost = oraclize_getPrice(ORACLE_DATA_SOURCE, QUERY_CALLBACK_GAS);\n        require(msg.value >= cost); // user must pay enough to cover query and callback\n        // create immediate query, we must make sure to store this one separately, so\n        // we do not schedule recursive callbacks when the query completes.\n        bytes32 queryId = oraclize_query(\n            ORACLE_DATA_SOURCE,\n            ORACLE_QUERY,\n            QUERY_CALLBACK_GAS\n        );\n        validQueryIDs[queryId] = true;\n    }\n\n    /*\n    // PUBLIC METHODS\n    */\n\n    /// @notice only public for callbacks from oraclize, do not call\n    /// @param queryID of the returning query, this should match our own internal mapping\n    /// @param result query to be processed\n    /// @param proof result proof\n    function __callback(bytes32 queryID, string result, bytes proof) public {\n        require(msg.sender == oraclize_cbAddress());\n        require(validQueryIDs[queryID]);  // At expiration or early settlement.\n        lastPriceQueryResult = result;\n        lastPrice = parseInt(result, PRICE_DECIMAL_PLACES);\n        UpdatedLastPrice(result);\n        checkSettlement();  // Verify settlement at expiration or requested early settlement.\n        delete validQueryIDs[queryID];\n    }\n\n    /*\n    // PRIVATE METHODS\n    */\n\n    /// @dev call to oraclize to set up our query and record its hash.\n    function queryOracle() private {\n        // Require that sufficient funds are available to pay for the query.\n        // require(oraclize_getPrice(ORACLE_DATA_SOURCE, QUERY_CALLBACK_GAS) < this.balance);\n        // NOTE: Currently the first oracle query call to oraclize.it is free. Since our\n        // expiration query will always be the first, there is no needed pre-funding amount\n        // to create this query.  When we go to the centralized query hub - this will change\n        // due to the fact that the address creating the query will always be the query hub.\n        // will have to do the analysis to see which is cheaper, free queries, or lower deployment\n        // gas costs\n        bytes32 queryId = oraclize_query(\n            EXPIRATION,\n            ORACLE_DATA_SOURCE,\n            ORACLE_QUERY,\n            QUERY_CALLBACK_GAS\n        );\n        validQueryIDs[queryId] = true;\n    }\n}",
  "sourcePath": "/home/parallels/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
  "ast": {
    "absolutePath": "/home/parallels/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
    "exportedSymbols": {
      "MarketContractOraclize": [
        2456
      ]
    },
    "id": 2457,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2270,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:24:8"
      },
      {
        "absolutePath": "/home/parallels/MARKETProtocol/contracts/oraclize/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 2271,
        "nodeType": "ImportDirective",
        "scope": 2457,
        "sourceUnit": 3366,
        "src": "634:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/parallels/MARKETProtocol/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 2272,
        "nodeType": "ImportDirective",
        "scope": 2457,
        "sourceUnit": 1997,
        "src": "662:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/parallels/MARKETProtocol/contracts/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 2273,
        "nodeType": "ImportDirective",
        "scope": 2457,
        "sourceUnit": 1442,
        "src": "697:31:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2274,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1441,
              "src": "910:14:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$1441",
                "typeString": "contract MarketContract"
              }
            },
            "id": 2275,
            "nodeType": "InheritanceSpecifier",
            "src": "910:14:8"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2276,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3365,
              "src": "926:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$3365",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 2277,
            "nodeType": "InheritanceSpecifier",
            "src": "926:13:8"
          }
        ],
        "contractDependencies": [
          55,
          1441,
          3365
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContract first example of a MarketProtocol contract using Oraclize services\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2456,
        "linearizedBaseContracts": [
          2456,
          3365,
          1441,
          55
        ],
        "name": "MarketContractOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2280,
            "libraryName": {
              "contractScope": null,
              "id": 2278,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1996,
              "src": "952:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1996",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "946:23:8",
            "typeName": {
              "id": 2279,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2282,
            "name": "ORACLE_DATA_SOURCE",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "992:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 2281,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2284,
            "name": "ORACLE_QUERY",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1030:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 2283,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2287,
            "name": "QUERY_CALLBACK_GAS",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1062:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2285,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1062:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313530303030",
              "id": 2286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1104:6:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_150000_by_1",
                "typeString": "int_const 150000"
              },
              "value": "150000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2296,
            "name": "SECONDS_PER_SIXTY_DAYS",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1116:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2288,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1116:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_5184000_by_1",
                "typeString": "int_const 5184000"
              },
              "id": 2295,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "id": 2293,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_rational_3600_by_1",
                    "typeString": "int_const 3600"
                  },
                  "id": 2291,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "hexValue": "3630",
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1155:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "60"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "argumentTypes": null,
                    "hexValue": "3630",
                    "id": 2290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1160:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "60"
                  },
                  "src": "1155:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3600_by_1",
                    "typeString": "int_const 3600"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3234",
                  "id": 2292,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1165:2:8",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_24_by_1",
                    "typeString": "int_const 24"
                  },
                  "value": "24"
                },
                "src": "1155:12:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3630",
                "id": 2294,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1170:2:8",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "1155:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5184000_by_1",
                "typeString": "int_const 5184000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2298,
            "name": "lastPriceQueryResult",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1313:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 2297,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1313:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2302,
            "name": "validQueryIDs",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1353:38:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 2301,
              "keyType": {
                "id": 2299,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1361:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1353:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 2300,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1372:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2356,
              "nodeType": "Block",
              "src": "2847:667:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2326,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2726,
                          "src": "2875:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2327,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2729,
                          "src": "2897:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "2875:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 2325,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3210,
                      "src": "2857:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 2329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:58:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2330,
                  "nodeType": "ExpressionStatement",
                  "src": "2857:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2331,
                      "name": "ORACLE_DATA_SOURCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2282,
                      "src": "3035:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2332,
                      "name": "oracleDataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
                      "src": "3056:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3035:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2334,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:37:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2335,
                      "name": "ORACLE_QUERY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2284,
                      "src": "3082:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2336,
                      "name": "oracleQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2316,
                      "src": "3097:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3082:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2338,
                  "nodeType": "ExpressionStatement",
                  "src": "3082:26:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2340,
                          "name": "EXPIRATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "3126:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2341,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4317,
                          "src": "3139:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3126:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "3118:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3118:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "3118:25:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2346,
                            "name": "EXPIRATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "3362:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2347,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4317,
                            "src": "3375:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3362:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2349,
                          "name": "SECONDS_PER_SIXTY_DAYS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2296,
                          "src": "3382:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3362:42:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "3354:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3354:51:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2352,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:51:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2353,
                      "name": "queryOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2455,
                      "src": "3415:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3415:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "3415:13:8"
                }
              ]
            },
            "id": 2357,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2319,
                    "name": "contractName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2304,
                    "src": "2739:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2320,
                    "name": "marketTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2306,
                    "src": "2761:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2321,
                    "name": "baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2308,
                    "src": "2789:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2322,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2312,
                    "src": "2815:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  }
                ],
                "id": 2323,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2318,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1441,
                  "src": "2715:14:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$1441_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2715:119:8"
              }
            ],
            "name": "MarketContractOraclize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2304,
                  "name": "contractName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2527:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 2303,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2306,
                  "name": "marketTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2556:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2556:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2308,
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2592:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2312,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2626:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2309,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2626:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2311,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 2310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2631:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2626:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2314,
                  "name": "oracleDataSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2657:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2657:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2316,
                  "name": "oracleQuery",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2690:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 2315,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2517:197:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2847:0:8"
            },
            "scope": 2456,
            "src": "2486:1028:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2388,
              "nodeType": "Block",
              "src": "3955:517:8",
              "statements": [
                {
                  "assignments": [
                    2361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2361,
                      "name": "cost",
                      "nodeType": "VariableDeclaration",
                      "scope": 2389,
                      "src": "3965:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2360,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3965:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2366,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2363,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "3995:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2364,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2287,
                        "src": "4015:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2362,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2995,
                        3013
                      ],
                      "referencedDeclaration": 3013,
                      "src": "3977:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 2365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3977:57:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3965:69:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2368,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4315,
                            "src": "4052:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4052:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2370,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2361,
                          "src": "4065:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4052:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "4044:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4044:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2373,
                  "nodeType": "ExpressionStatement",
                  "src": "4044:26:8"
                },
                {
                  "assignments": [
                    2375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2375,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2389,
                      "src": "4294:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2374,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4294:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2381,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2377,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "4340:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2378,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2284,
                        "src": "4372:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2379,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2287,
                        "src": "4398:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2376,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3053,
                        3095,
                        3141,
                        3185
                      ],
                      "referencedDeclaration": 3185,
                      "src": "4312:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4312:114:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4294:132:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2382,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2302,
                        "src": "4436:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2384,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2383,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "4450:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4436:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4461:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4436:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2387,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:29:8"
                }
              ]
            },
            "id": 2389,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestEarlySettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3935:2:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3955:0:8"
            },
            "scope": 2456,
            "src": "3904:568:8",
            "stateMutability": "payable",
            "superFunction": 1377,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2435,
              "nodeType": "Block",
              "src": "4824:406:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2399,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4315,
                            "src": "4842:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4842:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2401,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3197,
                            "src": "4856:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4856:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4842:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "4834:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4834:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2405,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:43:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2407,
                          "name": "validQueryIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "4895:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 2409,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2408,
                          "name": "queryID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2391,
                          "src": "4909:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4895:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "4887:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2411,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:31:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2412,
                      "name": "lastPriceQueryResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2298,
                      "src": "4967:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2413,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2393,
                      "src": "4990:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4967:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2415,
                  "nodeType": "ExpressionStatement",
                  "src": "4967:29:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2416,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "5006:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2418,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2393,
                          "src": "5027:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2419,
                          "name": "PRICE_DECIMAL_PLACES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "5035:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2417,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3344,
                        "src": "5018:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) returns (uint256)"
                        }
                      },
                      "id": 2420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5018:38:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5006:50:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2422,
                  "nodeType": "ExpressionStatement",
                  "src": "5006:50:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2424,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2393,
                        "src": "5083:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2423,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "5066:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5066:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2426,
                  "nodeType": "ExpressionStatement",
                  "src": "5066:24:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2427,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1426,
                      "src": "5100:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:17:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5194:29:8",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2430,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2302,
                        "src": "5201:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2432,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2431,
                        "name": "queryID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "5215:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5201:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "5194:29:8"
                }
              ]
            },
            "id": 2436,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2391,
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2436,
                  "src": "4772:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4772:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2393,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 2436,
                  "src": "4789:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4789:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2395,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 2436,
                  "src": "4804:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4771:45:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4824:0:8"
            },
            "scope": 2456,
            "src": "4752:478:8",
            "stateMutability": "nonpayable",
            "superFunction": 2966,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2454,
              "nodeType": "Block",
              "src": "5376:870:8",
              "statements": [
                {
                  "assignments": [
                    2440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2440,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2455,
                      "src": "6044:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2439,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6044:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2447,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2442,
                        "name": "EXPIRATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "6090:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2443,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "6114:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2444,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2284,
                        "src": "6146:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2445,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2287,
                        "src": "6172:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2441,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3053,
                        3095,
                        3141,
                        3185
                      ],
                      "referencedDeclaration": 3141,
                      "src": "6062:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6062:138:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6044:156:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2448,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2302,
                        "src": "6210:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2450,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2449,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2440,
                        "src": "6224:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6210:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6235:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6210:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2453,
                  "nodeType": "ExpressionStatement",
                  "src": "6210:29:8"
                }
              ]
            },
            "id": 2455,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "queryOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5365:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 2438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5376:0:8"
            },
            "scope": 2456,
            "src": "5345:901:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 2457,
        "src": "875:5373:8"
      }
    ],
    "src": "608:5640:8"
  },
  "legacyAST": {
    "absolutePath": "/home/parallels/MARKETProtocol/contracts/oraclize/MarketContractOraclize.sol",
    "exportedSymbols": {
      "MarketContractOraclize": [
        2456
      ]
    },
    "id": 2457,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2270,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:24:8"
      },
      {
        "absolutePath": "/home/parallels/MARKETProtocol/contracts/oraclize/oraclizeAPI.sol",
        "file": "./oraclizeAPI.sol",
        "id": 2271,
        "nodeType": "ImportDirective",
        "scope": 2457,
        "sourceUnit": 3366,
        "src": "634:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/parallels/MARKETProtocol/contracts/libraries/MathLib.sol",
        "file": "../libraries/MathLib.sol",
        "id": 2272,
        "nodeType": "ImportDirective",
        "scope": 2457,
        "sourceUnit": 1997,
        "src": "662:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/parallels/MARKETProtocol/contracts/MarketContract.sol",
        "file": "../MarketContract.sol",
        "id": 2273,
        "nodeType": "ImportDirective",
        "scope": 2457,
        "sourceUnit": 1442,
        "src": "697:31:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2274,
              "name": "MarketContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1441,
              "src": "910:14:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketContract_$1441",
                "typeString": "contract MarketContract"
              }
            },
            "id": 2275,
            "nodeType": "InheritanceSpecifier",
            "src": "910:14:8"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2276,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3365,
              "src": "926:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$3365",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 2277,
            "nodeType": "InheritanceSpecifier",
            "src": "926:13:8"
          }
        ],
        "contractDependencies": [
          55,
          1441,
          3365
        ],
        "contractKind": "contract",
        "documentation": "@title MarketContract first example of a MarketProtocol contract using Oraclize services\n @author Phil Elsasser <phil@marketprotocol.io>",
        "fullyImplemented": true,
        "id": 2456,
        "linearizedBaseContracts": [
          2456,
          3365,
          1441,
          55
        ],
        "name": "MarketContractOraclize",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2280,
            "libraryName": {
              "contractScope": null,
              "id": 2278,
              "name": "MathLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1996,
              "src": "952:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MathLib_$1996",
                "typeString": "library MathLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "946:23:8",
            "typeName": {
              "id": 2279,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2282,
            "name": "ORACLE_DATA_SOURCE",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "992:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 2281,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2284,
            "name": "ORACLE_QUERY",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1030:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 2283,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1030:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2287,
            "name": "QUERY_CALLBACK_GAS",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1062:48:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2285,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1062:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313530303030",
              "id": 2286,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1104:6:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_150000_by_1",
                "typeString": "int_const 150000"
              },
              "value": "150000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 2296,
            "name": "SECONDS_PER_SIXTY_DAYS",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1116:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2288,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1116:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_5184000_by_1",
                "typeString": "int_const 5184000"
              },
              "id": 2295,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "id": 2293,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_rational_3600_by_1",
                    "typeString": "int_const 3600"
                  },
                  "id": 2291,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "hexValue": "3630",
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1155:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "60"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "argumentTypes": null,
                    "hexValue": "3630",
                    "id": 2290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1160:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "60"
                  },
                  "src": "1155:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3600_by_1",
                    "typeString": "int_const 3600"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3234",
                  "id": 2292,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1165:2:8",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_24_by_1",
                    "typeString": "int_const 24"
                  },
                  "value": "24"
                },
                "src": "1155:12:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3630",
                "id": 2294,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1170:2:8",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "1155:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5184000_by_1",
                "typeString": "int_const 5184000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2298,
            "name": "lastPriceQueryResult",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1313:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 2297,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1313:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2302,
            "name": "validQueryIDs",
            "nodeType": "VariableDeclaration",
            "scope": 2456,
            "src": "1353:38:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 2301,
              "keyType": {
                "id": 2299,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1361:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1353:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 2300,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1372:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2356,
              "nodeType": "Block",
              "src": "2847:667:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2326,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2726,
                          "src": "2875:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2327,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2729,
                          "src": "2897:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "2875:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 2325,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3210,
                      "src": "2857:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 2329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:58:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2330,
                  "nodeType": "ExpressionStatement",
                  "src": "2857:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2331,
                      "name": "ORACLE_DATA_SOURCE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2282,
                      "src": "3035:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2332,
                      "name": "oracleDataSource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2314,
                      "src": "3056:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3035:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2334,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:37:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2335,
                      "name": "ORACLE_QUERY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2284,
                      "src": "3082:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2336,
                      "name": "oracleQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2316,
                      "src": "3097:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3082:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2338,
                  "nodeType": "ExpressionStatement",
                  "src": "3082:26:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2340,
                          "name": "EXPIRATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "3126:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2341,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4317,
                          "src": "3139:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3126:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "3118:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3118:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "3118:25:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2346,
                            "name": "EXPIRATION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "3362:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2347,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4317,
                            "src": "3375:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3362:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2349,
                          "name": "SECONDS_PER_SIXTY_DAYS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2296,
                          "src": "3382:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3362:42:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "3354:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3354:51:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2352,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:51:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2353,
                      "name": "queryOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2455,
                      "src": "3415:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3415:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "3415:13:8"
                }
              ]
            },
            "id": 2357,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2319,
                    "name": "contractName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2304,
                    "src": "2739:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2320,
                    "name": "marketTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2306,
                    "src": "2761:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2321,
                    "name": "baseTokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2308,
                    "src": "2789:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2322,
                    "name": "contractSpecs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2312,
                    "src": "2815:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                      "typeString": "uint256[5] memory"
                    }
                  }
                ],
                "id": 2323,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2318,
                  "name": "MarketContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1441,
                  "src": "2715:14:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MarketContract_$1441_$",
                    "typeString": "type(contract MarketContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2715:119:8"
              }
            ],
            "name": "MarketContractOraclize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2304,
                  "name": "contractName",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2527:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 2303,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2306,
                  "name": "marketTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2556:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2556:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2308,
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2592:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2312,
                  "name": "contractSpecs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2626:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
                    "typeString": "uint256[5] memory"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2309,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2626:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2311,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 2310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2631:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2626:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
                      "typeString": "uint256[5] storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2314,
                  "name": "oracleDataSource",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2657:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 2313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2657:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2316,
                  "name": "oracleQuery",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "2690:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 2315,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2517:197:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 2324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2847:0:8"
            },
            "scope": 2456,
            "src": "2486:1028:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2388,
              "nodeType": "Block",
              "src": "3955:517:8",
              "statements": [
                {
                  "assignments": [
                    2361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2361,
                      "name": "cost",
                      "nodeType": "VariableDeclaration",
                      "scope": 2389,
                      "src": "3965:9:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2360,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3965:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2366,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2363,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "3995:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2364,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2287,
                        "src": "4015:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2362,
                      "name": "oraclize_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2995,
                        3013
                      ],
                      "referencedDeclaration": 3013,
                      "src": "3977:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) returns (uint256)"
                      }
                    },
                    "id": 2365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3977:57:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3965:69:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2368,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4315,
                            "src": "4052:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4052:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2370,
                          "name": "cost",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2361,
                          "src": "4065:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4052:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "4044:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4044:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2373,
                  "nodeType": "ExpressionStatement",
                  "src": "4044:26:8"
                },
                {
                  "assignments": [
                    2375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2375,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2389,
                      "src": "4294:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2374,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4294:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2381,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2377,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "4340:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2378,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2284,
                        "src": "4372:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2379,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2287,
                        "src": "4398:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2376,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3053,
                        3095,
                        3141,
                        3185
                      ],
                      "referencedDeclaration": 3185,
                      "src": "4312:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4312:114:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4294:132:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2382,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2302,
                        "src": "4436:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2384,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2383,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "4450:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4436:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4461:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4436:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2387,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:29:8"
                }
              ]
            },
            "id": 2389,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "requestEarlySettlement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3935:2:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3955:0:8"
            },
            "scope": 2456,
            "src": "3904:568:8",
            "stateMutability": "payable",
            "superFunction": 1377,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2435,
              "nodeType": "Block",
              "src": "4824:406:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2399,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4315,
                            "src": "4842:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4842:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2401,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3197,
                            "src": "4856:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4856:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4842:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "4834:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4834:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2405,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:43:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2407,
                          "name": "validQueryIDs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2302,
                          "src": "4895:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 2409,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2408,
                          "name": "queryID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2391,
                          "src": "4909:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4895:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4318,
                      "src": "4887:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2411,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:31:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2412,
                      "name": "lastPriceQueryResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2298,
                      "src": "4967:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2413,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2393,
                      "src": "4990:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4967:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2415,
                  "nodeType": "ExpressionStatement",
                  "src": "4967:29:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2416,
                      "name": "lastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "5006:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2418,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2393,
                          "src": "5027:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2419,
                          "name": "PRICE_DECIMAL_PLACES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 769,
                          "src": "5035:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2417,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3344,
                        "src": "5018:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) returns (uint256)"
                        }
                      },
                      "id": 2420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5018:38:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5006:50:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2422,
                  "nodeType": "ExpressionStatement",
                  "src": "5006:50:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2424,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2393,
                        "src": "5083:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 2423,
                      "name": "UpdatedLastPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "5066:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5066:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2426,
                  "nodeType": "ExpressionStatement",
                  "src": "5066:24:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2427,
                      "name": "checkSettlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1426,
                      "src": "5100:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5100:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "5100:17:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5194:29:8",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2430,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2302,
                        "src": "5201:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2432,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2431,
                        "name": "queryID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2391,
                        "src": "5215:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5201:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "5194:29:8"
                }
              ]
            },
            "id": 2436,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2391,
                  "name": "queryID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2436,
                  "src": "4772:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4772:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2393,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 2436,
                  "src": "4789:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4789:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2395,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 2436,
                  "src": "4804:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4804:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4771:45:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4824:0:8"
            },
            "scope": 2456,
            "src": "4752:478:8",
            "stateMutability": "nonpayable",
            "superFunction": 2966,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2454,
              "nodeType": "Block",
              "src": "5376:870:8",
              "statements": [
                {
                  "assignments": [
                    2440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2440,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2455,
                      "src": "6044:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2439,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6044:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2447,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2442,
                        "name": "EXPIRATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "6090:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2443,
                        "name": "ORACLE_DATA_SOURCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2282,
                        "src": "6114:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2444,
                        "name": "ORACLE_QUERY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2284,
                        "src": "6146:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2445,
                        "name": "QUERY_CALLBACK_GAS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2287,
                        "src": "6172:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2441,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3053,
                        3095,
                        3141,
                        3185
                      ],
                      "referencedDeclaration": 3141,
                      "src": "6062:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6062:138:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6044:156:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2448,
                        "name": "validQueryIDs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2302,
                        "src": "6210:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 2450,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2449,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2440,
                        "src": "6224:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6210:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6235:4:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6210:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2453,
                  "nodeType": "ExpressionStatement",
                  "src": "6210:29:8"
                }
              ]
            },
            "id": 2455,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "queryOracle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5365:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 2438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5376:0:8"
            },
            "scope": 2456,
            "src": "5345:901:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 2457,
        "src": "875:5373:8"
      }
    ],
    "src": "608:5640:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {
        "OrderLib": "0x6b2369e2e5985e0ad82907223d011c3fdc71f34a"
      },
      "address": "0x12b7880c040a07965ecac4757b8dfe15570b8c03",
      "transactionHash": "0xc33b98801c4e003af4e657af4baad225ac35153b2a17a2908b6bf5992a14c880"
    },
    "4447": {
      "events": {},
      "links": {
        "OrderLib": "0x2c2b9c9a4a25e24b174f26114e8926a9f2128fe4"
      },
      "address": "0xf204a4ef082f5c04bb89f7d5e6568b796096735a",
      "transactionHash": "0x1f79fb79e70147118c3fe45b3e14eff049a5f41c2a0caa23d5a4339b8bc43c54"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-10T02:08:58.194Z"
}